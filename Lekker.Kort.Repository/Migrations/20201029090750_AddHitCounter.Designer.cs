// <auto-generated />
using Lekker.Kort.Repository.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lekker.Kort.Repository.Migrations
{
    [DbContext(typeof(ShortUrlContext))]
    [Migration("20201029090750_AddHitCounter")]
    partial class AddHitCounter
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Lekker")
                .HasAnnotation("ProductVersion", "3.1.8");

            modelBuilder.Entity("Lekker.Kort.Repository.Models.Hit", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ShortenedUrlKey")
                        .HasColumnType("TEXT");

                    b.HasKey("Key");

                    b.HasIndex("ShortenedUrlKey");

                    b.ToTable("Hits");
                });

            modelBuilder.Entity("Lekker.Kort.Repository.Models.ShortenedUrl", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Key");

                    b.ToTable("ShortenedUrls");
                });

            modelBuilder.Entity("Lekker.Kort.Repository.Models.Hit", b =>
                {
                    b.HasOne("Lekker.Kort.Repository.Models.ShortenedUrl", null)
                        .WithMany("Hits")
                        .HasForeignKey("ShortenedUrlKey");
                });
#pragma warning restore 612, 618
        }
    }
}
